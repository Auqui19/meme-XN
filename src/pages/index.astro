---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Crea tu meme XN">
  <main
    class="w-full p-4 md:p-0 h-screen flex flex-col gap-5 items-center justify-center"
  >
    <div id="capture" class="bg-[#000090] w-full md:w-96 p-3 ">
      <div
        id="img-preview"
        class="w-full h-[200px] md:h-[240px] bg-blue-100 relative cursor-pointer"
      >
        <input type="file" id="file" name="" class="hidden" accept="image/*" />
      </div>
      <div class="flex flex-col">
        <span
          contenteditable="true"
          class="text-[#5C99FE] font-bold text-base md:text-lg"
          >Luis Vasquez</span
        >
        <span contenteditable="true" class="text-white text-base md:text-lg"
          >Pendejo no dura nada</span
        >
      </div>
      <div
        class="flex items-center justify-between w-full text-[#5C99FE] text-base md:text-lg"
      >
        <div class="flex items-center">
          <span contenteditable="true">36sec</span>
          <span class="mx-1"> - </span>
          <span contenteditable="true">360p</span>
        </div>
        <div
          class="flex items-center text-[#5C99FE] text-base md:text-lg gap-1"
        >
          <span contenteditable="true">1M</span>
          <img src="ojo-abierto.png" alt="" class="w-4 translate-y-[10px]" />
          <span contenteditable="true">82%</span>
        </div>
      </div>
    </div>
    <button
      id="downloadButton"
      class="bg-[#000090] text-white text-lg px-4 py-2 rounded-md w-full md:w-96"
      >Generar</button
    >
  </main>
</Layout>

<script>
  import { imageConfig } from "astro:assets";

  document.addEventListener("DOMContentLoaded", () => {
    const inputFile = document.getElementById("file");
    const imgPreview = document.getElementById("img-preview");
    const downloadButton = document.getElementById("downloadButton");

    imgPreview.addEventListener("click", () => {
      inputFile.click();
    });

    inputFile.addEventListener("change", (event) => {
      const target = event.target;

      if (target.size < 2000000) {
        if (target && target.files && target.files[0]) {
          const image = target.files[0];

          // Crear un FileReader para leer el contenido de la imagen
          const reader = new FileReader();
          reader.onload = () => {
            const imgUrl = reader.result; // URL de la imagen cargada
            imgPreview.style.backgroundImage = `url(${imgUrl})`; // Asignar como fondo de img-preview
            imgPreview.innerHTML = ""; // Limpiar cualquier contenido de imgPreview

            const imgElement = document.createElement("img");
            imgElement.src = imgUrl;
            imgElement.classList.add(
              "w-full",
              "h-full",
              "object-cover",
              "absolute"
            );
            imgPreview.appendChild(imgElement);
          };
          reader.readAsDataURL(image);
        } else {
          console.error("No se pudo obtener el archivo.");
        }
      } else {
        console.error("El archivo es demasiado grande");
        return;
      }
    });

    downloadButton.addEventListener("click", () => {
      console.log("click");

      // Definimos el elemento a capturar dentro del evento para asegurar que esté disponible
      const elementToCapture = document.querySelector("#capture");

      // Verificamos si el elemento existe
      if (!elementToCapture) {
        console.error("El elemento a capturar no existe en el DOM");
        return;
      }

      import(
        "https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.3.2/html2canvas.min.js"
      )
        .then(() => {
          // Aseguramos que html2canvas esté disponible desde window
          const html2canvas = window.html2canvas;

          if (typeof html2canvas !== "function") {
            console.error("html2canvas no está disponible como función");
            return;
          }

          html2canvas(elementToCapture, {
            allowTaint: true,
            useCORS: true,
          }).then((canvas) => {
            const downloadLink = document.createElement("a");
            downloadLink.href = canvas.toDataURL("image/png");
            downloadLink.download = "memexn.png";
            downloadLink.click();
          });
        })
        .catch((error) => {
          console.error("Error al cargar html2canvas:", error);
        });
    });
  });
</script>
